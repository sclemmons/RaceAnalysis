@model RaceAnalysis.Models.RaceFilterViewModel
@using RaceAnalysis.Models

@{
    var controllerName = HttpContext.Current.Request.RequestContext.RouteData.Values["controller"].ToString();
}


@using (Html.BeginForm("ApplyFilter", controllerName, FormMethod.Post, new { @id = "myForm" }))

{
    <div class="form-group">
        <label for="raceSelectId" class="control-label">Races</label>
        @Html.ListBoxFor(m => m.SelectedRaceIds,
                new SelectList(Model.AvailableRaces, "RaceId", "DisplayName"),
                new { @id = "raceSelectId", @class="filter_select", multiple = "multiple" })
    </div>

    <div class="form-group">
        <label for="agSelectId">Age Groups</label>
        @Html.ListBoxFor(m => m.SelectedAgeGroupIds,
                new SelectList(Model.AvailableAgeGroups, "AgeGroupId", "DisplayName"),
                new { @id = "agSelectId", multiple = "multiple" })
    </div>

    <div class="form-group">
        <label for="genderSelectId">Genders</label>
        @Html.ListBoxFor(m => m.SelectedGenderIds,
                new SelectList(Model.AvailableGenders, "GenderId", "DisplayName"),
                new { @id = "genderSelectId", multiple = "multiple", })
    </div>

    <div id="duration-filter-container">
        @Html.Partial("~/Views/Shared/_FilterByDuration.cshtml", Model)
    </div>
    <div class="btn-container">
        <button type="submit" id="submitButton" class="btn btn-primary">Apply</button>
    </div>

    <div class="btn-container">
        <button id="resetButton" class="btn btn-link">Reset</button>
    </div>


}

<script type="text/javascript">

    $(document).ready(function () {

        var $race_select = $("#raceSelectId").SumoSelect({
            placeholder: "Select Races..",
            search: true,
            captionFormat: '{0} Races Selected',
            captionFormatAllSelected: 'All {0} races selected'
        });
        var $ag_select = $("#agSelectId").SumoSelect({
            placeholder: "Select Age Groups...",
            selectAll: true,
            captionFormat: '{0} Age Groups Selected',
            captionFormatAllSelected: 'All age groups selected'
        });
        var $gen_select = $("#genderSelectId").SumoSelect({
            placeholder: "Select Genders..",
        });


        $('#myForm').validate({
            rules: {
                SelectedRaceIds: {
                    required: true
                },
                SelectedAgeGroupIds: {
                    required: true
                },
                SelectedGenderIds: {
                    required: true
                }
            }
        });

        //in order for this to work with Chrome, disable the submit button on the form submit.-->
        $("#myForm").submit(function (event) {

            if ($("#myForm").valid() == true) //only disable th button if the form is valid otherwise the user cant submit again
            {
                $('#submitButton').text("One Moment...");
                $('#submitButton').prop("disabled", "disabled");
            }
            else {
                $('#submitButton').text("Apply");
            }

        });

        $("#resetButton").click(function () {
       
            for (var i = 0; i < $('#raceSelectId')[0].options.length; i++) {
                $('#raceSelectId')[0].sumo.unSelectItem(i);
            }

            for (var i = 0; i < $('#agSelectId')[0].options.length; i++) {
                $('#agSelectId')[0].sumo.unSelectItem(i);
            }

            for (var i = 0; i < $('#genderSelectId')[0].options.length; i++) {
                $('#genderSelectId')[0].sumo.unSelectItem(i);
            }
            //return false;
            $('#duration-filter-container').load('@Url.Action("ResetDurations", "TriStats")');

        });

    });
</script>



