@model RaceAnalysis.Models.TriathletesViewModel
@using X.PagedList
@using X.PagedList.Mvc;
<style>
    *.unselectable {
        -webkit-touch-callout: none;
        -webkit-user-select: none;
        -khtml-user-select: none;
        -moz-user-select: none;
        -ms-user-select: none;
        user-select: none;
    }

    .table-striped > tbody > tr:nth-child(odd).selected > td {
        background-color: #9FAFD1;
    }

    .table-striped > tbody > tr:nth-child(even).selected > td {
        background-color: #B0BED9;
    }

    .table-striped > tbody > tr:nth-child(odd).bnw > td {
        background-color: #2b2b2b;
        color: #f2f2f2;
    }

    .table-striped > tbody > tr:nth-child(even).bnw > td {
        background-color: #f2f2f2;
        color: #2b2b2b;
    }
</style>


<div id="athlete-list" class="table-responsive">
    <div id="pager-container">
       @Html.PagedListPager((IPagedList)Model.Triathletes,
                     page => Url.Action("DisplayPagedAthletes",
                    new RouteValueDictionary{
                            { "page", page },
                            { "races",  @String.Join(",",Model.Filter.SelectedRaceIds.Select(x => x.ToString()).ToArray())},
                            { "agegroups",  @String.Join(",",Model.Filter.SelectedAgeGroupIds.Select(x =>x.ToString()).ToArray()) },
                            { "genders" , @String.Join(",",Model.Filter.SelectedGenderIds.Select(x => x.ToString()).ToArray()) },
                            {"swimlowtimevalue", Model.Filter.SwimLow.TotalMinutes.ToString() },
                            {"swimhightimevalue", Model.Filter.SwimHigh.TotalMinutes.ToString() },

                            {"bikelowtimevalue", Model.Filter.BikeLow.TotalMinutes.ToString() },
                            {"bikehightimevalue", Model.Filter.BikeHigh.TotalMinutes.ToString() },

                            {"runlowtimevalue", Model.Filter.RunLow.TotalMinutes.ToString() },
                            {"runhightimevalue", Model.Filter.RunHigh.TotalMinutes.ToString() },

                            {"finishlowtimevalue", Model.Filter.FinishLow.TotalMinutes.ToString() },
                            {"finishhightimevalue", Model.Filter.FinishHigh.TotalMinutes.ToString() },

        
                            }),
                            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                                new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    InsertionMode = InsertionMode.Replace,
                                    UpdateTargetId = "athlete-list",
                                }))
    </div>


    <table id="athletes-table" class="table table-striped" data-rs-selectable data-rs-type="many">
        <thead>
            <tr>
                <th>Race Name</th>
                <th>Linked Name</th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).Country)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).DivRank)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).GenderRank)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).OverallRank)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).Swim)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).Bike)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).Run)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).Finish)
                </th>
            </tr>
        </thead>
        <tbody>

            @foreach (var athlete in Model.Triathletes)
            {
                <tr id="@athlete.TriathleteId">
                    <td>
                        @athlete.Race.DisplayName
                    </td>
                    <td>
                        @Html.Raw(String.Format("<a href='{0}/{1}' target='_blank'>{2}</a>", athlete.Race.BaseURL, athlete.Link, athlete.Name))


                    </td>
                    <td>
                        @athlete.Country
                    </td>
                    <td>
                        @athlete.DivRank
                    </td>
                    <td>
                        @athlete.GenderRank
                    </td>
                    <td>
                        @athlete.OverallRank
                    </td>

                    <td>
                        @athlete.Swim
                    </td>
                    <td>
                        @athlete.Bike
                    </td>
                    <td>
                        @athlete.Run
                    </td>
                    <td>
                        @athlete.Finish
                    </td>

                </tr>

            }


        </tbody>
    </table>
 </div>


<script type="text/javascript">
        $(document).ready(function () {
          
            var savedIds = @Html.Raw(Json.Encode(Model.Filter.SelectedAthleteIds));
          
            if(savedIds.length > 0)
            {
                var strIds = savedIds.map(String);
                var c =  $('#athletes-table').attr('data-rs-class') || 'selected';

                $('#athletes-table tr').each(function (index, element) {
                    
                    var i = strIds.indexOf(element.id);
                    if (i >= 0)
                    {
                        //$('#' + element.id).prop('checked',true);
                        $(this).toggleClass(c);
                    }
                });
            }

            $("#pager-container").on('click', 'a', function () {
                return handleSelectionsOnClick(this);
            });
           $("#action-compare-athletes").off('click');//remove previous handler
            $("#action-compare-athletes").click(function () {
                return handleSelectionsOnClick(this);
            });
            function handleSelectionsOnClick(control)
            {
                var savedIds = @Html.Raw(Json.Encode(Model.Filter.SelectedAthleteIds));
         
                if(savedIds.length > 0)
                {
                    savedIds = filterSavedIds(savedIds);
                }
                var selectedIds = getSelectedIds();
                
                if(savedIds.length > 0 || selectedIds.length > 0)
                {
                    control.href += "&selectedAthletes=";
                    if(savedIds.length > 0)
                    {
                        control.href += savedIds;
                        if(selectedIds.length > 0)
                            control.href += "," + selectedIds;
                    }else
                    {
                        control.href+= selectedIds.join(', ');
                    }
                }
                return true;

            }
            function getSelectedIds() {
              
                var selected = [];
                $('#athletes-table').selectedrows().each(function (idx, el) {
                    if (el.id.length > 0) {
                        selected.push(el.id);
                    }
                });

                return selected;
            }

            function filterSavedIds(savedIds){
               
                var strIds = savedIds.map(String);//converting for comparison 

                $('#athletes-table tr').each(function (index, element) {
                    var i = strIds.indexOf(element.id);
                    if (i >= 0)
                    {
                      
                        //this element was in our our savedids. We can discard it because it is either in our selectList
                        //or has been unselected by user.
                        strIds.splice(i,1);
                    }
                   
                });
                return strIds;
            }
            
            
            $('#athletes-table').on('clicked.rs.row', function (evt) {

                var numrows = $(this).selectedrows().length;
                if (numrows > 0) {
                    $('#action-compare-athletes').attr("disabled", false);
                }
                else {
                    $('#action-compare-athletes').attr("disabled", true);

                }

            });


        });
</script>