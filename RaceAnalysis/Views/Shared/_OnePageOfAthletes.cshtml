@model RaceAnalysis.Models.TriathletesViewModel

@using X.PagedList
@using X.PagedList.Mvc;

    <!-- import the included stylesheet for some (very basic) default styling -->
<link href="/Content/PagedList.css" rel="stylesheet" type="text/css" />

<div id="athlete-list" class="table-responsive">
    <div id="pager-container">
       @Html.PagedListPager((IPagedList)Model.Triathletes,
                     page => Url.Action("DisplayPagedAthletes",
                    new RouteValueDictionary{
                            { "page", page },
                            { "races",  @String.Join(",",Model.Filter.SelectedRaceIds.Select(x => x.ToString()).ToArray())},
                            { "agegroups",  @String.Join(",",Model.Filter.SelectedAgeGroupIds.Select(x =>x.ToString()).ToArray()) },
                            { "genders" , @String.Join(",",Model.Filter.SelectedGenderIds.Select(x => x.ToString()).ToArray()) },
                            {"swimlowtimevalue", Model.Filter.SwimLow.TotalMinutes.ToString() },
                            {"swimhightimevalue", Model.Filter.SwimHigh.TotalMinutes.ToString() },

                            {"bikelowtimevalue", Model.Filter.BikeLow.TotalMinutes.ToString() },
                            {"bikehightimevalue", Model.Filter.BikeHigh.TotalMinutes.ToString() },

                            {"runlowtimevalue", Model.Filter.RunLow.TotalMinutes.ToString() },
                            {"runhightimevalue", Model.Filter.RunHigh.TotalMinutes.ToString() },

                            {"finishlowtimevalue", Model.Filter.FinishLow.TotalMinutes.ToString() },
                            {"finishhightimevalue", Model.Filter.FinishHigh.TotalMinutes.ToString() },

                            { "selectedAthletes",  @String.Join(",",Model.Filter.SelectedAthleteIds.Select(x =>x.ToString()).ToArray()) },

                            }),
                            PagedListRenderOptions.EnableUnobtrusiveAjaxReplacing(
                                new AjaxOptions()
                                {
                                    HttpMethod = "GET",
                                    InsertionMode = InsertionMode.Replace,
                                    UpdateTargetId = "athlete-list",
                                }))
    </div>
    <table class="table table-striped">
        <thead>
            <tr>
                <th>Race Name</th>
                <th>Linked Name</th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).Country)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).DivRank)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).GenderRank)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).OverallRank)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).Swim)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).Bike)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).Run)
                </th>
                <th>
                    @Html.DisplayNameFor(model => model.Triathletes.ElementAt(0).Finish)
                </th>
                <th>
                    Select
                </th>


                <th></th>
            </tr>
        </thead>
        <tbody>
            @{ var i = 0;}
            @foreach (var athlete in Model.Triathletes)
            {
                <tr>
                    <td>
                        @athlete.Race.DisplayName
                    </td>
                    <td>
                        @Html.Raw(String.Format("<a href='{0}/{1}' target='_blank'>{2}</a>", athlete.Race.BaseURL, athlete.Link, athlete.Name))


                    </td>
                    <td>
                        @athlete.Country
                    </td>
                    <td>
                        @athlete.DivRank
                    </td>
                    <td>
                        @athlete.GenderRank
                    </td>
                    <td>
                        @athlete.OverallRank
                    </td>

                    <td>
                        @athlete.Swim
                    </td>
                    <td>
                        @athlete.Bike
                    </td>
                    <td>
                        @athlete.Run
                    </td>
                    <td>
                        @athlete.Finish
                    </td>
                    <td>
                        <input id="@athlete.TriathleteId" type="checkbox" />
                </tr>
                i++;
            }


        </tbody>
    </table>
 </div>


<script type="text/javascript">
        $(document).ready(function () {
          
            var selectedIds = @Html.Raw(Json.Encode(Model.Filter.SelectedAthleteIds));
            if(selectedIds.length > 0)
            {
                var strIds = selectedIds.map(String);

                $('input[type=checkbox]').each(function (index, element) {
                    var i = strIds.indexOf(element.id);
                    if (i >= 0)
                    {
                        $('#' + element.id).prop('checked',true);
                    }
                });
            }

            $("#pager-container").on('click', 'a', function () {

                var ids = getSelectedIds();
                if(ids.length > 0)
                {
                    if(this.href.toLowerCase().search("selectedathletes=") > 0)
                    {
                   /*Warning: This is flimsy code! It assumes that this param is at the end of the querystring*/
                        this.href += "," + ids; //just append it
                    }
                    else
                    {
                        this.href += "&selectedAthletes=" + ids;
                    }
                }
                return true;
            });


            function getSelectedIds() {
                var Ids = "";
                $('input[type=checkbox]').each(function (index, element) {
                    if (this.checked) {
                        Ids += this.id + ",";
                    }
                });
                if (Ids.endsWith(","))
                    Ids = Ids.slice(0, -1);

                return Ids;
            }
            
           

        });
</script>