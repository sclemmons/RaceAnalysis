@model RaceAnalysis.Models.HypotheticalsViewModel

@{
    Layout = "~/Views/Layouts/_FullPageLayout.cshtml";
    var SelectedRaceId = Model.Filter.SelectedRaceIds.SingleOrDefault();
    var SelectedGenderId = Model.Filter.SelectedGenderIds.SingleOrDefault();
    var SelectedAgeGroupId = Model.Filter.SelectedAgeGroupIds.SingleOrDefault();

}

@section scripts {
<script type="text/javascript" src="https://cdn.plot.ly/plotly-latest.min.js"></script>
<script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
}


<form id="myForm">
    <div class="criteria">
   
    <span class="title">I am interested in this race:</span>
        @Html.DropDownListFor(m => SelectedRaceId,
                    new SelectList(Model.Filter.AvailableRaces, "RaceId", "DisplayName"),"Select Race...",
                    new { @id = "raceSelectId", @class = "selection" })
    
    <span class="title">I am a</span>
        @Html.DropDownListFor(m => SelectedGenderId,
                new SelectList(Model.Filter.AvailableGenders, "GenderId", "DisplayName"), "Select Gender...",
                new { @id = "genderSelectId", @class = "selection" })

    <span class="title">in this age group: </span>@Html.DropDownListFor(m => SelectedAgeGroupId,
                new SelectList(Model.Filter.AvailableAgeGroups, "AgeGroupId", "DisplayName"),"Select Age Group...",
                new { @id = "agSelectId", @class = "selection" })

     <span class="title">In most races I am:</span>
        @Html.DropDownListFor(m => m.SelectedSkillLevel,
                new SelectList(Model.AvailableSkillLevels, "Value", "DisplayName"),
                new { @id = "skillLevelId", @class = "selection" })
    </div>


    <div class="hypothetical">
        @Ajax.ActionLink("What is my expected finish time?",
                        "FinishTime", "Hypotheticals",
                        null,
                        new AjaxOptions
                        {
                            UpdateTargetId = "ExpectedFinishTimeResults",
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "GET",
                            OnBegin = "beginPost"
                        },
                        htmlAttributes: new { id = "ExpectedFinishTime" })
    </div>

    <div id="ExpectedFinishTimeResults"></div>

    <div class="hypothetical">
        @Ajax.ActionLink("What is my expected swim time?",
                        "SwimTime", "Hypotheticals",
                        null,
                        new AjaxOptions
                        {
                            UpdateTargetId = "ExpectedSwimTimeResults",
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "GET",
                            OnBegin = "beginPost"
                        },
                        htmlAttributes: new { id = "ExpectedSwimTime" })
    </div>

    <div id="ExpectedSwimTimeResults"></div>

    <div class="hypothetical">
        @Ajax.ActionLink("What is my expected bike time?",
                        "BikeTime", "Hypotheticals",
                        null,
                        new AjaxOptions
                        {
                            UpdateTargetId = "ExpectedBikeTimeResults",
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "GET",
                            OnBegin = "beginPost"
                        },
                        htmlAttributes: new { id = "ExpectedBikeTime" })
    </div>

    <div id="ExpectedBikeTimeResults"></div>

    <div class="hypothetical">
        @Ajax.ActionLink("What is my expected run time?",
                        "RunTime", "Hypotheticals",
                        null,
                        new AjaxOptions
                        {
                            UpdateTargetId = "ExpectedRunTimeResults",
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "GET",
                            OnBegin = "beginPost"
                        },
                        htmlAttributes: new { id = "ExpectedRunTime" })
    </div>

    <div id="ExpectedRunTimeResults"></div>

    <div class="hypothetical">
        @Ajax.ActionLink("If I biked this fast... what is my expected finish time?",
                        "ShowBikeRange", "Hypotheticals",
                        null,
                        new AjaxOptions
                        {
                            UpdateTargetId = "BikeRangeDiv",
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "GET",
                            OnBegin = "beginPost"
                        },
                        htmlAttributes: new { id = "BikeRangeLink" })


    </div>
    <div id="BikeRangeDiv">
      
    </div>
   
    <div id="BikeVisualizationDiv">

    </div>
       

    <div class="hypothetical">
        @Ajax.ActionLink("If I biked this fast... what is my expected run time?",
                        "FinishTime", "Hypotheticals",
                        null,
                        new AjaxOptions
                        {
                            UpdateTargetId = "ExpectedFinishTimeResults",
                            InsertionMode = InsertionMode.Replace,
                            HttpMethod = "GET",
                            OnBegin = "beginPost"
                        },
                        htmlAttributes: new { id = "ExpectedFinishTime" })

    </div>

</form>

<script type="text/javascript">

    $(document).ready(function () {

        var $race_select = $("#raceSelectId").SumoSelect({
            placeholder: "Select Race..",
            search: true,
            captionFormat: '{0} Races Selected',
            captionFormatAllSelected: 'All {0} races selected'
        });
        var $ag_select = $("#agSelectId").SumoSelect({
            placeholder: "My Age Group...",
            captionFormat: '{0} Age Groups Selected',
            captionFormatAllSelected: 'All age groups selected'
        });
        var $gen_select = $("#genderSelectId").SumoSelect({
            placeholder: "My Gender..",
        });
        var $skill_select = $("#skillLevelId").SumoSelect({
            placeholder: "My Skill Level...",
            maximumSelectionLength: 1
        });
        $('#myForm').validate({
           
            rules: {
                SelectedRaceIds: {
                    required: true
                },
                SelectedAgeGroupIds: {
                    required: true
                },
                SelectedGenderIds: {
                    required: true
                },
                SelectedSkillLevel: {
                    required: true
                }
            }
        });
    });
    function beginPost(xhr, request) {
            var requester = $(this);
            //if (!validateForm(requester))/*TBD, validation  is not working*/
            // return false;

            var race = $("#raceSelectId").val();
            var ag = $("#agSelectId").val();
            var gender = $("#genderSelectId").val();
            var skill = $("#skillLevelId").val();

            if (race.length == 0 || ag.length == 0 || gender.length == 0 || skill.length == 0)//poor man's validation
                return false;

            var requestParams = request.url.split('?');
            request.url = requestParams[0] + "?races=" + race + "&agegroups=" + ag + "&genders=" + gender + "&skilllevel=" + skill;

          
            var bikelowtimevalue = $("#bikelowtimevalue").val();
            var bikehightimevalue = $("#bikehightimevalue").val();

            if (bikelowtimevalue != undefined && bikehightimevalue != undefined) {
                request.url += "&bikelowtimevalue=" + bikelowtimevalue + "&bikehightimevalue=" + bikehightimevalue;
            }

        }
    function validateForm(requester) {
            var _form = requester.closest("form");
            var validator = $('#myForm').validate({
                ignore: 'input[type=hidden]',
                errorElement: "div",
                errorPlacement: function (error, element) {
                    element.after(error);
                }
            });
            //var validator = $("#myForm").validate(); // obtain validator
            var anyError = false;
            if (anyError)
                return false; // exit if any error found    
        }
   
</script>

